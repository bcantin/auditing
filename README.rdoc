= auditing

Auditing is a simple way to track and rollback changes to a record.
== Sample Project

http://github.com/bcantin/auditing_project
  
== Installation

  gem install auditing
  
You will have to supply a model named Audit in your rails application with the following migration

  create_table :audits, :force => true do |t|
    t.string  :action
    t.string  :auditable_type
    t.integer :auditable_id
    t.string  :association_type
    t.integer :association_id
    t.string  :field_name
    t.string  :old_value
    t.string  :new_value
    # t.integer :user_id
    t.boolean :undoable, :default => true
    t.timestamps
  end
  
If you want to track the user, uncomment the t.integer :user_id above.

TODO: more to follow about tracking the user

  class Audit < ActiveRecord::Base
    include Auditing::Auditor
    belongs_to :auditable,   :polymorphic => true
    belongs_to :association, :polymorphic => true
  end
  
  
== Basic Usage

To add auditing to all attributes on a model, simply add auditing to the model.

  class School < ActiveRecord::Base
    audit_enabled
  end

If you want more control over which attributes are audited, you can define them
by supplying a fields hash

  class School < ActiveRecord::Base
    audit_enabled :fields => [:name, :established_on]
  end
  
Auditing will not track "id", "created_at", or "updated_at" by default

== belongs_to relationships

Auditing a belongs_to relationship works by keeping track of the foreign_id attribute. You do
not need to add anything to the foreign model.

== has_many relationships

You may have the need to keep track of a has_many relationship.  To accomplish this, we have
to enable a similar type of auditing on the other model(s)

  class Company < ActiveRecord::Base
    has_many :phone_numbers
    audit_enabled
  end
  class PhoneNumber < ActiveRecord::Base
    belongs_to :company
    audit_relationship_enabled
  end

As above, you can supply a :fields hash of which attributes will be logged.
If your relationship is polymorphic, you can supply an array of classes
that you only want to log.

  audit_relationship_enabled :only => [Company, Person]
  
== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 Brad Cantin. See LICENSE for details.
